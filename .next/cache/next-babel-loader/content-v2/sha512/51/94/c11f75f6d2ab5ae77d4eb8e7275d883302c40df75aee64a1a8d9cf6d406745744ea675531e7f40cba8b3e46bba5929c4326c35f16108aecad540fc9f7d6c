{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\github\\\\nextjs\\\\chalenge-wiser-react-ts\\\\src\\\\utils\\\\withPrivateRoute.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst withAuth = Component => {\n  const Auth = props => {\n    // Login data added to props via redux-store (or use react context for example)\n    const {\n      isLoggedIn\n    } = props; // If user is not logged in, return login component\n\n    if (!isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this);\n    } // If user is logged in, return original component\n\n\n    return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n  }; // Copy getInitial props so it will run as well\n\n\n  if (Component.getInitialProps) {\n    Auth.getInitialProps = Component.getInitialProps;\n  }\n\n  return Auth;\n};\n\nexport default withAuth;","map":{"version":3,"sources":["F:/github/nextjs/chalenge-wiser-react-ts/src/utils/withPrivateRoute.tsx"],"names":["withAuth","Component","Auth","props","isLoggedIn","getInitialProps"],"mappings":";;;;;;;;;AAAA,MAAMA,QAAQ,GAAGC,SAAS,IAAI;AAC1B,QAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiBD,KAAvB,CAFsB,CAItB;;AACA,QAAI,CAACC,UAAL,EAAiB;AACf,0BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KATqB,CAWtB;;;AACA,wBACE,QAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAfD,CAD0B,CAkB1B;;;AACA,MAAIF,SAAS,CAACI,eAAd,EAA+B;AAC7BH,IAAAA,IAAI,CAACG,eAAL,GAAuBJ,SAAS,CAACI,eAAjC;AACD;;AAED,SAAOH,IAAP;AACD,CAxBH;;AA0BE,eAAeF,QAAf","sourcesContent":["const withAuth = Component => {\r\n    const Auth = (props) => {\r\n      // Login data added to props via redux-store (or use react context for example)\r\n      const { isLoggedIn } = props;\r\n  \r\n      // If user is not logged in, return login component\r\n      if (!isLoggedIn) {\r\n        return (\r\n          <Login />\r\n        );\r\n      }\r\n  \r\n      // If user is logged in, return original component\r\n      return (\r\n        <Component {...props} />\r\n      );\r\n    };\r\n  \r\n    // Copy getInitial props so it will run as well\r\n    if (Component.getInitialProps) {\r\n      Auth.getInitialProps = Component.getInitialProps;\r\n    }\r\n  \r\n    return Auth;\r\n  };\r\n  \r\n  export default withAuth;"]},"metadata":{},"sourceType":"module"}