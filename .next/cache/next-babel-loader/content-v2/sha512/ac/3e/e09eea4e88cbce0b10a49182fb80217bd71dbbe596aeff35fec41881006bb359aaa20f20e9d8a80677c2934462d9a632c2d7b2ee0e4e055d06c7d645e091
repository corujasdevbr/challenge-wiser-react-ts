{"ast":null,"code":"import api from '../../services/api';\nimport { login } from '../ducks/account';\nimport { addMessage } from '../ducks/layout';\nimport { useRouter } from 'next/router';\nexport const authLogin = user => {\n  const router = useRouter();\n  return dispatch => {\n    api.post('/account/signin', user).then(res => {\n      localStorage.setItem('wiser-token', res.data.token);\n      dispatch(login());\n      router.push('dashboard');\n    }).catch(error => {\n      const {\n        message\n      } = error.response.data;\n      dispatch(addMessage());\n    });\n  };\n};","map":{"version":3,"sources":["F:/github/nextjs/chalenge-wiser-react-ts/src/store/fetchActions/accountActions.ts"],"names":["api","login","addMessage","useRouter","authLogin","user","router","dispatch","post","then","res","localStorage","setItem","data","token","push","catch","error","message","response"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,oBAAhB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU;AAClC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,SAAQI,QAAD,IAAc;AACpBP,IAAAA,GAAG,CACDQ,IADF,CACO,iBADP,EAC0BH,IAD1B,EAEEI,IAFF,CAEQC,GAAD,IAAS;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCF,GAAG,CAACG,IAAJ,CAASC,KAA7C;AACAP,MAAAA,QAAQ,CAACN,KAAK,EAAN,CAAR;AAEAK,MAAAA,MAAM,CAACS,IAAP,CAAY,WAAZ;AACA,KAPF,EAQEC,KARF,CAQSC,KAAD,IAAW;AACjB,YAAM;AAAEC,QAAAA;AAAF,UAAcD,KAAK,CAACE,QAAN,CAAeN,IAAnC;AACAN,MAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACA,KAXF;AAYA,GAbD;AAcA,CAjBM","sourcesContent":["import api from '../../services/api';\r\nimport { login } from '../ducks/account';\r\nimport { addMessage } from '../ducks/layout';\r\nimport { useRouter } from 'next/router'\r\n\r\nexport const authLogin = (user) => {\r\n\tconst router = useRouter()\r\n\r\n\treturn (dispatch) => {\r\n\t\tapi\r\n\t\t\t.post('/account/signin', user)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tlocalStorage.setItem('wiser-token', res.data.token);\r\n\t\t\t\tdispatch(login());\r\n\r\n\t\t\t\trouter.push('dashboard');\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconst { message } = error.response.data;\r\n\t\t\t\tdispatch(addMessage());\r\n\t\t\t});\r\n\t};\r\n};"]},"metadata":{},"sourceType":"module"}